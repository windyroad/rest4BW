<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:ns2="http://xmlns.tibco.com/bw/plugin-api/messages/context" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns1="http://windyroad.org/RESTlib.xsd" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns4="http://windyroad.org/wr-http.xsd" xmlns:ns="http://schemas.tibco.com/bw/plugins/http/5.0/httpExceptions" xmlns:ns3="http://xmlns.tibco.com/encodings/mime" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <pd:name>REST/Public/HTTP Listener.process</pd:name>
    <pd:startName>HTTP Receiver</pd:startName>
    <pd:startX>0</pd:startX>
    <pd:startY>0</pd:startY>
    <pd:returnBindings/>
    <pd:starter name="HTTP Receiver">
        <pd:type>com.tibco.plugin.http.HTTPEventSource</pd:type>
        <pd:resourceType>httppalette.httpEventSource</pd:resourceType>
        <pd:x>110</pd:x>
        <pd:y>100</pd:y>
        <config>
            <outputMode>String</outputMode>
            <defaultEncoding>UTF8</defaultEncoding>
            <inputOutputVersion>5.3.0</inputOutputVersion>
            <newMimeSupport>true</newMimeSupport>
            <sharedChannel>/REST/Public/HTTP Connection.sharedhttp</sharedChannel>
            <parsePostData>true</parsePostData>
            <Headers>
                <xsd:element name="root">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="host" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="If-Modified-Since" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Accept" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Accept-Charset" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Accept-Encoding" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Content-Type" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Content-Length" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Connection" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Cookie" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Pragma" type="xsd:string" minOccurs="0"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </Headers>
        </config>
        <pd:inputBindings/>
    </pd:starter>
    <pd:endName>End</pd:endName>
    <pd:endX>692</pd:endX>
    <pd:endY>101</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1334624650946</pd:targetNamespace>
    <pd:activity name="Send HTTP Response">
        <pd:type>com.tibco.plugin.http.HTTPResponseActivity</pd:type>
        <pd:resourceType>httppalette.httpWebResponse</pd:resourceType>
        <pd:x>508</pd:x>
        <pd:y>102</pd:y>
        <config>
            <closeConnection>true</closeConnection>
            <eventSource>HTTP Receiver</eventSource>
            <flushResponse>true</flushResponse>
            <Headers>
                <xsd:element name="root">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="Allow" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Cache-Control" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Last-Modified" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Expires" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="StatusLine" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Content-Type" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Set-Cookie" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Pragma" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Location" type="xsd:string" minOccurs="0"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </Headers>
        </config>
        <pd:inputBindings>
            <ResponseActivityInput>
                <xsl:if test="$REST-Interface/ns4:response/ns4:binaryContent">
                    <binaryContent>
                        <xsl:value-of select="$REST-Interface/ns4:response/ns4:binaryContent"/>
                    </binaryContent>
                </xsl:if>
                <xsl:if test="$REST-Interface/ns4:response/ns4:asciiContent">
                    <asciiContent>
                        <xsl:value-of select="$REST-Interface/ns4:response/ns4:asciiContent"/>
                    </asciiContent>
                </xsl:if>
                <xsl:for-each select="$REST-Interface/ns4:response/ns4:respHeaders">
                    <Headers>
                        <xsl:if test="ns4:Allow">
                            <Allow>
                                <xsl:value-of select="ns4:Allow"/>
                            </Allow>
                        </xsl:if>
                        <xsl:if test="ns4:Cache-Control">
                            <Cache-Control>
                                <xsl:value-of select="ns4:Cache-Control"/>
                            </Cache-Control>
                        </xsl:if>
                        <xsl:if test="ns4:Last-Modified">
                            <Last-Modified>
                                <xsl:value-of select="ns4:Last-Modified"/>
                            </Last-Modified>
                        </xsl:if>
                        <xsl:if test="ns4:Expires">
                            <Expires>
                                <xsl:value-of select="ns4:Expires"/>
                            </Expires>
                        </xsl:if>
                        <xsl:if test="ns4:StatusLine">
                            <StatusLine>
                                <xsl:value-of select="ns4:StatusLine"/>
                            </StatusLine>
                        </xsl:if>
                        <xsl:if test="ns4:Content-Type">
                            <Content-Type>
                                <xsl:value-of select="ns4:Content-Type"/>
                            </Content-Type>
                        </xsl:if>
                        <xsl:if test="ns4:Set-Cookie">
                            <Set-Cookie>
                                <xsl:value-of select="ns4:Set-Cookie"/>
                            </Set-Cookie>
                        </xsl:if>
                        <xsl:if test="ns4:Pragma">
                            <Pragma>
                                <xsl:value-of select="ns4:Pragma"/>
                            </Pragma>
                        </xsl:if>
                        <xsl:if test="ns4:Location">
                            <Location>
                                <xsl:value-of select="ns4:Location"/>
                            </Location>
                        </xsl:if>
                    </Headers>
                </xsl:for-each>
            </ResponseActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="REST Interface">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>317</pd:x>
        <pd:y>100</pd:y>
        <config>
            <processName>/REST/Public/Process/REST Interface.process</processName>
        </config>
        <pd:inputBindings>
            <ns4:request>
                <xsl:if test="$HTTP-Receiver/ProcessStarterOutput/Method">
                    <ns4:Method>
                        <xsl:value-of select="$HTTP-Receiver/ProcessStarterOutput/Method"/>
                    </ns4:Method>
                </xsl:if>
                <xsl:if test="$HTTP-Receiver/ProcessStarterOutput/RequestURI">
                    <ns4:RequestURI>
                        <xsl:value-of select="$HTTP-Receiver/ProcessStarterOutput/RequestURI"/>
                    </ns4:RequestURI>
                </xsl:if>
                <xsl:if test="$HTTP-Receiver/ProcessStarterOutput/HTTPVersion">
                    <ns4:HTTPVersion>
                        <xsl:value-of select="$HTTP-Receiver/ProcessStarterOutput/HTTPVersion"/>
                    </ns4:HTTPVersion>
                </xsl:if>
                <xsl:if test="$HTTP-Receiver/ProcessStarterOutput/PostData">
                    <ns4:PostData>
                        <xsl:value-of select="$HTTP-Receiver/ProcessStarterOutput/PostData"/>
                    </ns4:PostData>
                </xsl:if>
                <xsl:if test="$HTTP-Receiver/ProcessStarterOutput/Command">
                    <ns4:Command>
                        <xsl:value-of select="$HTTP-Receiver/ProcessStarterOutput/Command"/>
                    </ns4:Command>
                </xsl:if>
                <xsl:if test="$HTTP-Receiver/ProcessStarterOutput/QueryString">
                    <ns4:QueryString>
                        <xsl:value-of select="$HTTP-Receiver/ProcessStarterOutput/QueryString"/>
                    </ns4:QueryString>
                </xsl:if>
                <ns4:Header>
                    <xsl:value-of select="$HTTP-Receiver/ProcessStarterOutput/Header"/>
                </ns4:Header>
                <xsl:if test="$HTTP-Receiver/ProcessStarterOutput/Protocol">
                    <ns4:Protocol>
                        <xsl:value-of select="$HTTP-Receiver/ProcessStarterOutput/Protocol"/>
                    </ns4:Protocol>
                </xsl:if>
                <xsl:if test="$HTTP-Receiver/ProcessStarterOutput/Port">
                    <ns4:Port>
                        <xsl:value-of select="$HTTP-Receiver/ProcessStarterOutput/Port"/>
                    </ns4:Port>
                </xsl:if>
                <xsl:for-each select="$HTTP-Receiver/ProcessStarterOutput/Headers">
                    <ns4:Headers>
                        <xsl:if test="Accept">
                            <ns4:Accept>
                                <xsl:value-of select="Accept"/>
                            </ns4:Accept>
                        </xsl:if>
                        <xsl:if test="Accept-Charset">
                            <ns4:Accept-Charset>
                                <xsl:value-of select="Accept-Charset"/>
                            </ns4:Accept-Charset>
                        </xsl:if>
                        <xsl:if test="Accept-Encoding">
                            <ns4:Accept-Encoding>
                                <xsl:value-of select="Accept-Encoding"/>
                            </ns4:Accept-Encoding>
                        </xsl:if>
                        <xsl:if test="Content-Type">
                            <ns4:Content-Type>
                                <xsl:value-of select="Content-Type"/>
                            </ns4:Content-Type>
                        </xsl:if>
                        <xsl:if test="Content-Length">
                            <ns4:Content-Length>
                                <xsl:value-of select="Content-Length"/>
                            </ns4:Content-Length>
                        </xsl:if>
                        <xsl:if test="Connection">
                            <ns4:Connection>
                                <xsl:value-of select="Connection"/>
                            </ns4:Connection>
                        </xsl:if>
                        <xsl:if test="Cookie">
                            <ns4:Cookie>
                                <xsl:value-of select="Cookie"/>
                            </ns4:Cookie>
                        </xsl:if>
                        <xsl:if test="Pragma">
                            <ns4:Pragma>
                                <xsl:value-of select="Pragma"/>
                            </ns4:Pragma>
                        </xsl:if>
                        <xsl:if test="host">
                            <ns4:host>
                                <xsl:value-of select="host"/>
                            </ns4:host>
                        </xsl:if>
                        <xsl:if test="If-Modified-Since">
                            <ns4:If-Modified-Since>
                                <xsl:value-of select="If-Modified-Since"/>
                            </ns4:If-Modified-Since>
                        </xsl:if>
                    </ns4:Headers>
                </xsl:for-each>
                <ns4:Context>
                    <ns4:RemoteAddress>
                        <xsl:value-of select="$HTTP-Receiver/ProcessStarterOutput/ns2:Context/RemoteAddress"/>
                    </ns4:RemoteAddress>
                </ns4:Context>
            </ns4:request>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Catch HTTP Exception">
        <pd:type>com.tibco.pe.core.CatchActivity</pd:type>
        <pd:resourceType>ae.activities.catch</pd:resourceType>
        <pd:x>508</pd:x>
        <pd:y>228</pd:y>
        <pd:handler>true</pd:handler>
        <config>
            <fault>localname=HttpCommunicationException namespace=http://schemas.tibco.com/bw/plugins/http/5.0/httpExceptions</fault>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Log">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>688</pd:x>
        <pd:y>224</pd:y>
        <config>
            <processName>/REST/Public/Common/Log.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <message>
                    <xsl:value-of select="$Catch-HTTP-Exception/ns:HttpCommunicationException/msg"/>
                </message>
                <xsl:if test="$Catch-HTTP-Exception/ns:HttpCommunicationException/msgCode">
                    <messageCode>
                        <xsl:value-of select="$Catch-HTTP-Exception/ns:HttpCommunicationException/msgCode"/>
                    </messageCode>
                </xsl:if>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Send HTTP Response</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>HTTP Receiver</pd:from>
        <pd:to>REST Interface</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>REST Interface</pd:from>
        <pd:to>Send HTTP Response</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Catch HTTP Exception</pd:from>
        <pd:to>Log</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>