<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns="http://www.tibco.com/pe/EngineTypes" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:pfx="http://windyroad.org/RESTlib.xsd">
    <xsd:import namespace="http://windyroad.org/RESTlib.xsd" schemaLocation="/BWUnit/Private/REST/BWUnit Rest.xsd"/>
    <pd:name>REST/Public/REST/parseAccept.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="accept" type="xsd:string"/>
    </pd:startType>
    <pd:startX>150</pd:startX>
    <pd:startY>64</pd:startY>
    <pd:returnBindings>
        <pfx:accepts>
            <xsl:for-each select="$Map-Data/pfx:accepts/pfx:accept">
                <xsl:sort select="@q" order="descending" data-type="number"/>
                <xsl:copy-of select="."/>
            </xsl:for-each>
        </pfx:accepts>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType ref="pfx:accepts"/>
    <pd:endX>450</pd:endX>
    <pd:endY>64</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1329808531854</pd:targetNamespace>
    <pd:activity name="Map Data">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>284</pd:x>
        <pd:y>65</pd:y>
        <config>
            <element ref="pfx:accepts"/>
        </config>
        <pd:inputBindings>
            <pfx:accepts>
                <xsl:for-each select="tib:tokenize($Start/accept, &quot;,&quot;)">
                    <pfx:accept>
                        <xsl:variable name="media-range" select="if (substring-before(., ';q=') = '') then . else substring-before(., ';q=')"/>
                        <xsl:attribute name="type">
                            <xsl:value-of select="if (substring-before($media-range, ';') = '') then $media-range else substring-before($media-range, ';')"/>
                        </xsl:attribute>
                        <xsl:attribute name="q">
                            <xsl:value-of select="if (substring-after(., ';q=') = '') then '1.0' else substring-after(., ';q=')"/>
                        </xsl:attribute>
                        <xsl:if test="substring-after($media-range, ';') !=''">
                            <xsl:for-each select="tib:tokenize(substring-after($media-range, ';'), &quot;;&quot;)">
                                <pfx:parameters>
                                    <xsl:attribute name="name">
                                        <xsl:value-of select="tib:trim(substring-before(., '='))"/>
                                    </xsl:attribute>
                                    <xsl:variable name="value" select="tib:trim(substring-after(., '='))"/>
                                    <xsl:attribute name="value">
                                        <xsl:value-of select="if((starts-with($value, '&quot;') and ends-with($value, '&quot;')) or  (starts-with($value, &quot;'&quot;) and ends-with($value, &quot;'&quot;))) then&#xA;&#x9;substring($value,2, string-length($value)-2)&#xA;else&#xA;&#x9;$value"/>
                                    </xsl:attribute>
                                </pfx:parameters>
                            </xsl:for-each>
                        </xsl:if>
                    </pfx:accept>
                </xsl:for-each>
            </pfx:accepts>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Map Data</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Map Data</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>