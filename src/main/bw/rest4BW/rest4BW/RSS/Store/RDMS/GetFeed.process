<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pfx2="http://windyroad.org/rest-delegate.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:pfx3="http://www.w3.org/2005/Atom" xmlns:pfx="http://windyroad.org/rest4BW.xsd" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:pfx4="http://www.tibco.com/ns/no_namespace_schema_location/rest4BW/RSS/Feed Mapping.xsd" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns1="http://purl.org/syndication/history/1.0" xmlns:pfx5="www.tibco.com/plugin/java/JavaMethodActivityInput" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:ns="http://windyroad.org/HTTP1.1-StatusCodeDefinitions" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns2="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema">
    <xsd:import namespace="http://windyroad.org/rest-delegate.xsd"/>
    <xsd:import namespace="http://windyroad.org/HTTP1.1-StatusCodeDefinitions" schemaLocation="/rest4BW/Schemas/StatusCodeDefinitions.xsd"/>
    <xsd:import namespace="http://windyroad.org/rest4BW.xsd" schemaLocation="/rest4BW/Schemas/rest4BW.xsd"/>
    <xsd:import namespace="http://www.w3.org/2005/Atom" schemaLocation="/rest4BW/RSS/atom.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/rest4BW/RSS/Feed Mapping.xsd" schemaLocation="/rest4BW/RSS/Feed Mapping.xsd"/>
    <xsd:import namespace="http://purl.org/syndication/history/1.0" schemaLocation="/rest4BW/RSS/sy.xsd"/>
    <pd:name>rest4BW/RSS/Store/RDMS/GetFeed.process</pd:name>
    <pd:description/>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="input">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element ref="pfx:request"/>
                    <xsd:element ref="pfx4:feed"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>67</pd:startX>
    <pd:startY>78</pd:startY>
    <pd:returnBindings>
        <pfx3:feed>
            <pfx3:generator>
                <xsl:attribute name="uri">
                    <xsl:value-of select="'http://windyroad.org/software/open-source/rest4bw/'"/>
                </xsl:attribute>rest4BW</pfx3:generator>
            <pfx3:id>
                <xsl:value-of select="$Start/input/feed/@id"/>
            </pfx3:id>
            <pfx3:title>
                <xsl:attribute name="type">text</xsl:attribute>
                <xsl:value-of select="$Start/input/feed/@title"/>
            </pfx3:title>
            <pfx3:updated>
                <xsl:value-of select="tib:if-absent($Get-Subscription-Doc/resultSet/Record[1]/FEED_UPDATED | $Get-Archive-Doc/resultSet/Record[1]/FEED_UPDATED, &#xA;current-dateTime())"/>
            </pfx3:updated>
            <xsl:for-each select="$Get-Subscription-Doc/resultSet/Record | $Get-Archive-Doc/resultSet/Record">
                <pfx3:entry>
                    <pfx3:content>
                        <xsl:if test="TYPE">
                            <xsl:if test="TYPE">
                                <xsl:attribute name="type">
                                    <xsl:value-of select="TYPE"/>
                                </xsl:attribute>
                            </xsl:if>
                        </xsl:if>
                        <xsl:value-of select="CONTENT"/>
                    </pfx3:content>
                    <pfx3:id>
                        <xsl:value-of select="ID"/>
                    </pfx3:id>
                    <pfx3:title>
                        <xsl:value-of select="TITLE"/>
                    </pfx3:title>
                    <pfx3:published>
                        <xsl:value-of select="PUBLISHED"/>
                    </pfx3:published>
                    <pfx3:updated>
                        <xsl:value-of select="UPDATED"/>
                    </pfx3:updated>
                </pfx3:entry>
            </xsl:for-each>
            <pfx3:author>
                <pfx3:name>Business Unit</pfx3:name>
            </pfx3:author>
            <xsl:choose>
                <xsl:when test="exists($Get-Subscription-Doc/resultSet)">
                    <pfx3:link>
                        <xsl:attribute name="href">
                            <xsl:value-of select="$Start/input/feed/@href"/>
                        </xsl:attribute>
                        <xsl:attribute name="rel">self</xsl:attribute>
                    </pfx3:link>
                    <xsl:if test="$Get-Subscription-Doc/resultSet/Record[1]/PAGES > 0">
                        <pfx3:link>
                            <xsl:attribute name="href">
                                <xsl:value-of select="concat($Start/input/feed/@href, '?page=', $Get-Subscription-Doc/resultSet/Record[1]/PAGES - 1)"/>
                            </xsl:attribute>
                            <xsl:attribute name="rel">prev-archive</xsl:attribute>
                        </pfx3:link>
                    </xsl:if>
                </xsl:when>
                <xsl:otherwise>
                    <pfx3:link>
                        <xsl:attribute name="href">
                            <xsl:value-of select="concat($Start/input/feed/@href, '?page=', $Get-Archive-Doc/resultSet/Record[1]/PAGENUM)"/>
                        </xsl:attribute>
                        <xsl:attribute name="rel">self</xsl:attribute>
                    </pfx3:link>
                    <pfx3:link>
                        <xsl:attribute name="href">
                            <xsl:value-of select="$Start/input/feed/@href"/>
                        </xsl:attribute>
                        <xsl:attribute name="rel">current</xsl:attribute>
                    </pfx3:link>
                    <xsl:if test="$Get-Archive-Doc/resultSet/Record[1]/PAGENUM > 0">
                        <pfx3:link>
                            <xsl:attribute name="href">
                                <xsl:value-of select="concat($Start/input/feed/@href, '?page=', $Get-Subscription-Doc/resultSet/Record[1]/PAGES - 1)"/>
                            </xsl:attribute>
                            <xsl:attribute name="rel">prev-archive</xsl:attribute>
                        </pfx3:link>
                    </xsl:if>
                    <ns1:archive/>
                </xsl:otherwise>
            </xsl:choose>
        </pfx3:feed>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType ref="pfx3:feed"/>
    <pd:endX>323</pd:endX>
    <pd:endY>83</pd:endY>
    <pd:errorSchemas>
        <Error ref="pfx:error"/>
    </pd:errorSchemas>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1338181537186</pd:targetNamespace>
    <pd:activity name="Get Subscription Doc">
        <pd:type>com.tibco.plugin.jdbc.JDBCQueryActivity</pd:type>
        <pd:resourceType>ae.activities.JDBCQueryActivity</pd:resourceType>
        <pd:x>213</pd:x>
        <pd:y>51</pd:y>
        <config>
            <timeout>10</timeout>
            <commit>false</commit>
            <maxRows>100</maxRows>
            <emptyStrAsNil>false</emptyStrAsNil>
            <jdbcSharedConfig>/rest4BW/RSS/Store/RDMS/Event Store Connection.sharedjdbc</jdbcSharedConfig>
            <statement>select * from (select *, ((rownum-1) / ?) pagenum from entries) 
outer left join (select max(updated) feed_updated, (count(*)/?) PAGES from entries)
where pagenum = (select (count(*)/?) COUNT from ENTRIES) 
order by rownum desc</statement>
            <oraObjects/>
            <oraTables/>
            <QueryOutputCachedSchemaColumns>ID</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>12</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>VARCHAR</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>OptionalElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>TITLE</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>12</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>VARCHAR</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>OptionalElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>CONTENT</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>2005</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>CLOB</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>OptionalElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>TYPE</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>12</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>VARCHAR</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>OptionalElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>PUBLISHED</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>93</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>TIMESTAMP</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>OptionalElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>UPDATED</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>93</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>TIMESTAMP</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>OptionalElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>PAGENUM</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>4</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>INTEGER</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>OptionalElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>FEED_UPDATED</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>93</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>TIMESTAMP</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>OptionalElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>PAGES</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>-5</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>BIGINT</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>OptionalElement</QueryOutputCachedSchemaStatus>
            <Prepared_Param_DataType>
                <parameter>
                    <parameterName>pagesize</parameterName>
                    <dataType>INTEGER</dataType>
                </parameter>
                <parameter>
                    <parameterName>pagesize</parameterName>
                    <dataType>INTEGER</dataType>
                </parameter>
                <parameter>
                    <parameterName>pagesize</parameterName>
                    <dataType>INTEGER</dataType>
                </parameter>
            </Prepared_Param_DataType>
            <optionalOrNillable>false</optionalOrNillable>
        </config>
        <pd:inputBindings>
            <jdbcQueryActivityInput>
                <pagesize>
                    <xsl:choose>
                        <xsl:when test="exists($Start/input/feed/@pagesize)">
                            <xsl:value-of select="$Start/input/feed/@pagesize"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </pagesize>
                <pagesize>
                    <xsl:choose>
                        <xsl:when test="exists($Start/input/feed/@pagesize)">
                            <xsl:value-of select="$Start/input/feed/@pagesize"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </pagesize>
                <pagesize>
                    <xsl:choose>
                        <xsl:when test="exists($Start/input/feed/@pagesize)">
                            <xsl:value-of select="$Start/input/feed/@pagesize"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </pagesize>
            </jdbcQueryActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Get Archive Doc">
        <pd:type>com.tibco.plugin.jdbc.JDBCQueryActivity</pd:type>
        <pd:resourceType>ae.activities.JDBCQueryActivity</pd:resourceType>
        <pd:x>210</pd:x>
        <pd:y>168</pd:y>
        <config>
            <timeout>10</timeout>
            <commit>false</commit>
            <maxRows>100</maxRows>
            <emptyStrAsNil>false</emptyStrAsNil>
            <statement>select * from (select *, ((rownum-1) / ?) pagenum from entries) 
outer left join (select max(updated) feed_updated, (count(*)/?) PAGES from entries)
where pagenum = ? 
order by rownum desc</statement>
            <Prepared_Param_DataType>
                <parameter>
                    <parameterName>pagesize</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>pagesize</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>page</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
            </Prepared_Param_DataType>
            <jdbcSharedConfig>/rest4BW/RSS/Store/RDMS/Event Store Connection.sharedjdbc</jdbcSharedConfig>
            <oraObjects/>
            <oraTables/>
            <QueryOutputCachedSchemaColumns>ID</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>12</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>VARCHAR</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>OptionalElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>TITLE</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>12</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>VARCHAR</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>OptionalElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>CONTENT</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>2005</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>CLOB</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>OptionalElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>TYPE</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>12</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>VARCHAR</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>OptionalElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>PUBLISHED</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>93</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>TIMESTAMP</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>OptionalElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>UPDATED</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>93</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>TIMESTAMP</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>OptionalElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>PAGENUM</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>4</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>INTEGER</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>OptionalElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>FEED_UPDATED</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>93</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>TIMESTAMP</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>OptionalElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>PAGES</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>-5</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>BIGINT</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>OptionalElement</QueryOutputCachedSchemaStatus>
            <optionalOrNillable>false</optionalOrNillable>
        </config>
        <pd:inputBindings>
            <jdbcQueryActivityInput>
                <pagesize>
                    <xsl:choose>
                        <xsl:when test="exists($Start/input/feed/@pagesize)">
                            <xsl:value-of select="$Start/input/feed/@pagesize"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </pagesize>
                <pagesize>
                    <xsl:choose>
                        <xsl:when test="exists($Start/input/feed/@pagesize)">
                            <xsl:value-of select="$Start/input/feed/@pagesize"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </pagesize>
                <page>
                    <xsl:value-of select="$Start/input/pfx:request/pfx:query/pfx:item[@name='page']/@value"/>
                </page>
            </jdbcQueryActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Get Subscription Doc</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Get Subscription Doc</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Get Archive Doc</pd:to>
        <pd:xpathDescription>Page specified</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>exists($Start/input/pfx:request/pfx:query/pfx:item[@name='page']/@value)</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Get Archive Doc</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>