<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pfx2="http://windyroad.org/wr-http.xsd" xmlns:pfx3="http://www.tibco.com/ns/no_namespace_schema_location/rest4BW/RSS/Feed Mapping.xsd" xmlns:pfx="http://windyroad.org/rest4BW.xsd" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ns="http://windyroad.org/bwunit-asserts-0.0.0.xsd" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:pd="http://xmlns.tibco.com/bw/process/2003">
    <xsd:import namespace="http://windyroad.org/rest4BW.xsd" schemaLocation="/rest4BW/Schemas/rest4BW.xsd"/>
    <xsd:import namespace="http://www.w3.org/2005/Atom" schemaLocation="/rest4BW/RSS/atom.xsd"/>
    <xsd:import namespace="http://windyroad.org/wr-http.xsd" schemaLocation="/rest4BW/Schemas/HttpConnection.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/rest4BW/RSS/Feed Mapping.xsd" schemaLocation="/rest4BW/RSS/Feed Mapping.xsd"/>
    <pd:name>test/quickTestSuite/eventFeedTestCase/steps/The Entries Should Be.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="input">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element ref="atom:feed"/>
                    <xsd:element name="entry" minOccurs="0" maxOccurs="unbounded">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="content" type="xsd:string"/>
                                <xsd:element name="type" type="xsd:string" minOccurs="0"/>
                            </xsd:sequence>
                            <xsd:attribute name="id" type="xsd:string" use="required"/>
                            <xsd:attribute name="title" type="xsd:string" use="required"/>
                        </xsd:complexType>
                    </xsd:element>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>150</pd:startX>
    <pd:startY>64</pd:startY>
    <pd:returnBindings/>
    <pd:endName>End</pd:endName>
    <pd:endX>361</pd:endX>
    <pd:endY>60</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1350505462311</pd:targetNamespace>
    <pd:activity name="AssertEqual">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>265</pd:x>
        <pd:y>63</pd:y>
        <config>
            <processName>/BWUnit/Public/Asserts/AssertEqual.process</processName>
        </config>
        <pd:inputBindings>
            <ns:equal-input>
                <ns:expected>
                    <contents>
                        <xsl:for-each select="$Start/input/entry">
                            <xsl:sort select="position()" order="descending" data-type="number"/>
                            <xsl:attribute name="id">
                                <xsl:value-of select="@id"/>
                            </xsl:attribute>
                            <xsl:attribute name="title">
                                <xsl:value-of select="@title"/>
                            </xsl:attribute>
                            <content>
                                <xsl:value-of select="content"/>
                            </content>
                            <type>
                                <xsl:value-of select="type"/>
                            </type>
                        </xsl:for-each>
                    </contents>
                </ns:expected>
                <ns:actual>
                    <contents>
                        <xsl:for-each select="$Start/input/atom:feed/atom:entry">
                            <xsl:if test="atom:id">
                                <xsl:attribute name="id">
                                    <xsl:value-of select="atom:id"/>
                                </xsl:attribute>
                            </xsl:if>
                            <xsl:if test="atom:title">
                                <xsl:attribute name="title">
                                    <xsl:value-of select="atom:title"/>
                                </xsl:attribute>
                            </xsl:if>
                            <content>
                                <xsl:value-of select="atom:content[1]"/>
                            </content>
                            <type>
                                <xsl:value-of select="atom:content[1]/@type"/>
                            </type>
                        </xsl:for-each>
                    </contents>
                </ns:actual>
            </ns:equal-input>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>AssertEqual</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>AssertEqual</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>