<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:pfx="http://windyroad.org/rest-tib-lib.xsd">
    <xsd:import namespace="http://windyroad.org/rest-tib-lib.xsd" schemaLocation="/REST/Private/Schemas/rest-tib-lib.xsd"/>
    <pd:name>REST/Private/Common/http/parseHeaders.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="root">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="header" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>218</pd:startX>
    <pd:startY>129</pd:startY>
    <pd:returnBindings>
        <root>
            <xsl:copy-of select="$output/AccumulatedOutput/root/pfx:header"/>
        </root>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType>
        <xsd:element name="root">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element ref="pfx:header" minOccurs="0" maxOccurs="unbounded"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:endType>
    <pd:endX>900</pd:endX>
    <pd:endY>126</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1334885020743</pd:targetNamespace>
    <pd:group name="iterate over headers">
        <pd:type>com.tibco.pe.core.LoopGroup</pd:type>
        <pd:resourceType>ae.process.group</pd:resourceType>
        <pd:x>369</pd:x>
        <pd:y>41</pd:y>
        <pd:width>396</pd:width>
        <pd:height>163</pd:height>
        <pd:collapsedWidth>57</pd:collapsedWidth>
        <pd:collapsedHeight>70</pd:collapsedHeight>
        <pd:groupVariables/>
        <pd:joinToggle>inherit</pd:joinToggle>
        <config>
            <pd:groupType>inputLoop</pd:groupType>
            <pd:serializable>false</pd:serializable>
            <pd:over>$Start/root/header</pd:over>
            <pd:iterationElementSlot>header</pd:iterationElementSlot>
            <pd:indexSlot>index</pd:indexSlot>
            <pd:outSlot>output</pd:outSlot>
            <pd:activityOutputName>Split accept</pd:activityOutputName>
            <pd:accumulateOutput>true</pd:accumulateOutput>
        </config>
        <pd:inputBindings/>
        <pd:expanded>true</pd:expanded>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>Simple Split</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Split accept</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Simple Split</pd:from>
            <pd:to>Split accept</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:activity name="Split accept">
            <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
            <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
            <pd:x>643</pd:x>
            <pd:y>128</pd:y>
            <config>
                <element>
                    <xsd:element name="root">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element ref="pfx:header"/>
                            </xsd:sequence>
                        </xsd:complexType>
                    </xsd:element>
                </element>
            </config>
            <pd:inputBindings>
                <xsl:variable name="quote" select="'&quot;'"/>
                <root>
                    <pfx:header>
                        <pfx:key>
                            <xsl:value-of select="$Simple-Split/root/key"/>
                        </pfx:key>
                        <xsl:for-each select="$Simple-Split/root/segments">
                            <pfx:entries>
                                <xsl:for-each select="params">
                                    <xsl:choose>
                                        <xsl:when test="tib:index-of(., &quot;=&quot;) > -1">
                                            <pfx:entry>
                                                <xsl:variable name="value" select="substring-after(.,&quot;=&quot;)"/>
                                                <pfx:key>
                                                    <xsl:value-of select="substring-before(.,&quot;=&quot;)"/>
                                                </pfx:key>
                                                <pfx:value>
                                                    <xsl:value-of select="if (starts-with($value, $quote) &#xA;&#x9;and ends-with($value, $quote)&#xA;&#x9;and string-length($value) > 2)&#xA;then substring($value, 2, string-length($value) - 2)&#xA;else $value"/>
                                                </pfx:value>
                                            </pfx:entry>
                                        </xsl:when>
                                        <xsl:otherwise>
                                            <pfx:entry>
                                                <pfx:key>
                                                    <xsl:value-of select="."/>
                                                </pfx:key>
                                            </pfx:entry>
                                        </xsl:otherwise>
                                    </xsl:choose>
                                </xsl:for-each>
                            </pfx:entries>
                        </xsl:for-each>
                    </pfx:header>
                </root>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Simple Split">
            <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
            <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
            <pd:x>496</pd:x>
            <pd:y>129</pd:y>
            <config>
                <element>
                    <xsd:element name="root">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="segments" minOccurs="0" maxOccurs="unbounded">
                                    <xsd:complexType>
                                        <xsd:sequence>
                                            <xsd:element name="params" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
                                        </xsd:sequence>
                                    </xsd:complexType>
                                </xsd:element>
                                <xsd:element name="key" type="xsd:string" minOccurs="0"/>
                            </xsd:sequence>
                        </xsd:complexType>
                    </xsd:element>
                </element>
            </config>
            <pd:inputBindings>
                <xsl:variable name="segments" select="if (tib:index-of($header/header, &quot;:&quot;) > -1)&#xA;then substring-after($header/header, &quot;:&quot;)&#xA;else $header/header"/>
                <root>
                    <xsl:for-each select="tib:tokenize($segments, &quot;,&quot;)">
                        <segments>
                            <xsl:for-each select="tib:tokenize(., &quot;;&quot;)">
                                <params>
                                    <xsl:value-of select="tib:trim(.)"/>
                                </params>
                            </xsl:for-each>
                        </segments>
                    </xsl:for-each>
                    <key>
                        <xsl:value-of select="substring-before($header/header, &quot;:&quot;)"/>
                    </key>
                </root>
            </pd:inputBindings>
        </pd:activity>
    </pd:group>
    <pd:transition>
        <pd:from>iterate over headers</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>iterate over headers</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>