<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:pfx="http://windyroad.org/rest-tib-lib.xsd">
    <xsd:import namespace="http://windyroad.org/rest-tib-lib.xsd" schemaLocation="/REST/Private/Schemas/rest-tib-lib.xsd"/>
    <pd:name>REST/Private/Process/Mappers/Components/parseMultipart.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="input">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="post" type="xsd:string"/>
                    <xsd:element name="contentType" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>85</pd:startX>
    <pd:startY>70</pd:startY>
    <pd:returnBindings>
        <pfx:post>
            <xsl:copy-of select="$for-each-part-output/AccumulatedOutput/pfx:part"/>
        </pfx:post>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType ref="pfx:post"/>
    <pd:endX>1210</pd:endX>
    <pd:endY>70</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1301905132783</pd:targetNamespace>
    <pd:group name="for each part">
        <pd:type>com.tibco.pe.core.LoopGroup</pd:type>
        <pd:resourceType>ae.process.group</pd:resourceType>
        <pd:x>619</pd:x>
        <pd:y>155</pd:y>
        <pd:width>577</pd:width>
        <pd:height>161</pd:height>
        <pd:collapsedWidth>57</pd:collapsedWidth>
        <pd:collapsedHeight>70</pd:collapsedHeight>
        <pd:groupVariables/>
        <pd:joinToggle>inherit</pd:joinToggle>
        <config>
            <pd:groupType>inputLoop</pd:groupType>
            <pd:serializable>false</pd:serializable>
            <pd:over>$split-into-parts-tokenize/root/output</pd:over>
            <pd:iterationElementSlot>part</pd:iterationElementSlot>
            <pd:indexSlot>index</pd:indexSlot>
            <pd:outSlot>for-each-part-output</pd:outSlot>
            <pd:activityOutputName>data aggregator</pd:activityOutputName>
            <pd:accumulateOutput>true</pd:accumulateOutput>
        </config>
        <pd:inputBindings/>
        <pd:expanded>true</pd:expanded>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>split header and content</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>data aggregator</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>ParseHeaders</pd:from>
            <pd:to>data aggregator</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>split header and content</pd:from>
            <pd:to>ParseHeaders</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:activity name="ParseHeaders">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>908</pd:x>
            <pd:y>241</pd:y>
            <config>
                <processName>/REST/Private/Process/Mappers/Components/ParseHeaders.process</processName>
            </config>
            <pd:inputBindings>
                <root>
                    <xsl:for-each select="tib:tokenize($split-header-and-content/root/header, '&#xA;')">
                        <header>
                            <xsl:value-of select="."/>
                        </header>
                    </xsl:for-each>
                </root>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="data aggregator">
            <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
            <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
            <pd:x>1080</pd:x>
            <pd:y>240</pd:y>
            <config>
                <element ref="pfx:part"/>
            </config>
            <pd:inputBindings>
                <pfx:part>
                    <xsl:for-each select="$ParseHeaders/root/pfx:header">
                        <pfx:meta>
                            <xsl:if test="pfx:key">
                                <xsl:attribute name="name">
                                    <xsl:value-of select="pfx:key"/>
                                </xsl:attribute>
                            </xsl:if>
                            <xsl:if test="pfx:entries[1]/pfx:entry[1]/pfx:key">
                                <xsl:attribute name="value">
                                    <xsl:value-of select="pfx:entries[1]/pfx:entry[1]/pfx:key"/>
                                </xsl:attribute>
                            </xsl:if>
                        </pfx:meta>
                    </xsl:for-each>
                    <xsl:for-each select="$ParseHeaders/root/pfx:header/pfx:entries/pfx:entry[position() > 1]">
                        <pfx:meta>
                            <xsl:attribute name="name">
                                <xsl:value-of select="pfx:key"/>
                            </xsl:attribute>
                            <xsl:if test="pfx:value">
                                <xsl:attribute name="value">
                                    <xsl:value-of select="pfx:value"/>
                                </xsl:attribute>
                            </xsl:if>
                        </pfx:meta>
                    </xsl:for-each>
                    <pfx:content>
                        <xsl:value-of select="$split-header-and-content/root/content"/>
                    </pfx:content>
                </pfx:part>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="split header and content">
            <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
            <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
            <pd:x>735</pd:x>
            <pd:y>243</pd:y>
            <config>
                <element>
                    <xsd:element name="root">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="header" type="xsd:string"/>
                                <xsd:element name="content" type="xsd:string"/>
                            </xsd:sequence>
                        </xsd:complexType>
                    </xsd:element>
                </element>
            </config>
            <pd:inputBindings>
                <xsl:variable name="vHeaderContentDelim" select="'&#xA;&#xA;'"/>
                <root>
                    <header>
                        <xsl:value-of select="tib:trim(substring-before($part/output, $vHeaderContentDelim))"/>
                    </header>
                    <content>
                        <xsl:value-of select="tib:trim(substring-after($part/output, $vHeaderContentDelim))"/>
                    </content>
                </root>
            </pd:inputBindings>
        </pd:activity>
    </pd:group>
    <pd:activity name="ParseHeader">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>221</pd:x>
        <pd:y>70</pd:y>
        <config>
            <processName>/REST/Private/Process/Mappers/Components/ParseHeaders.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <header>
                    <xsl:value-of select="$Start/input/contentType"/>
                </header>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="split into parts (tokenize)">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>545</pd:x>
        <pd:y>77</pd:y>
        <config>
            <processName>/REST/Private/Common/xslt2/tokenize.process</processName>
        </config>
        <pd:inputBindings>
            <tokenize>
                <string>
                    <xsl:value-of select="$split-into-sections/root/parts"/>
                </string>
                <pattern>
                    <xsl:value-of select="concat('&#xA;--',$split-into-sections/root/boundary)"/>
                </pattern>
            </tokenize>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="split into sections">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>380</pd:x>
        <pd:y>77</pd:y>
        <config>
            <element>
                <xsd:element name="root">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="preamble" type="xsd:string"/>
                            <xsd:element name="parts" type="xsd:string"/>
                            <xsd:element name="epilogue" type="xsd:string"/>
                            <xsd:element name="boundary" type="xsd:string"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </element>
        </config>
        <pd:inputBindings>
            <xsl:variable name="startBoundary" select="concat('--',$ParseHeader/root/pfx:header/pfx:entries/pfx:entry[pfx:key='boundary']/pfx:value)"/>
            <xsl:variable name="endBoundary" select="concat('--',$ParseHeader/root/pfx:header/pfx:entries/pfx:entry[pfx:key='boundary']/pfx:value,'--')"/>
            <root>
                <preamble>
                    <xsl:value-of select="substring-before($Start/input/post, $startBoundary)"/>
                </preamble>
                <parts>
                    <xsl:value-of select="substring-before(substring-after($Start/input/post, $startBoundary),$endBoundary)"/>
                </parts>
                <epilogue>
                    <xsl:value-of select="substring-after($Start/input/post, $endBoundary)"/>
                </epilogue>
                <boundary>
                    <xsl:value-of select="$ParseHeader/root/pfx:header/pfx:entries/pfx:entry[pfx:key='boundary']/pfx:value"/>
                </boundary>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>ParseHeader</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>split into sections</pd:from>
        <pd:to>split into parts (tokenize)</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ParseHeader</pd:from>
        <pd:to>split into sections</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>split into parts (tokenize)</pd:from>
        <pd:to>for each part</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>for each part</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:label>
        <pd:name>Label</pd:name>
        <pd:description>N.B. We're not strictly adhereing to the HTTP 1.0 RFC, the split boundary delimiter *SHOULD* have a CRLF prepended to it!</pd:description>
        <pd:x>242</pd:x>
        <pd:y>229</pd:y>
        <pd:width>304</pd:width>
        <pd:height>72</pd:height>
        <pd:fontColor>-16777216</pd:fontColor>
        <pd:color>-26266</pd:color>
        <pd:type>solid</pd:type>
        <pd:thickness>0</pd:thickness>
        <pd:fade>true</pd:fade>
    </pd:label>
</pd:ProcessDefinition>