<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pfx="http://windyroad.org/RESTlib.xsd" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ns="http://www.tibco.com/pe/EngineTypes" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:pd="http://xmlns.tibco.com/bw/process/2003">
    <xsd:import namespace="http://windyroad.org/RESTlib.xsd" schemaLocation="/REST/Public/Schemas/RESTlib.xsd"/>
    <pd:name>REST/Public/Process/Http/parseAccept.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="accept" type="xsd:string"/>
    </pd:startType>
    <pd:startX>150</pd:startX>
    <pd:startY>64</pd:startY>
    <pd:returnBindings>
        <pfx:accepts>
            <xsl:for-each select="$Parse-Accepts/pfx:accepts/pfx:accept">
                <xsl:sort select="@q" order="descending" data-type="number"/>
                <xsl:copy-of select="."/>
            </xsl:for-each>
        </pfx:accepts>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType ref="pfx:accepts"/>
    <pd:endX>741</pd:endX>
    <pd:endY>59</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1329808531854</pd:targetNamespace>
    <pd:activity name="Parse Accepts">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>569</pd:x>
        <pd:y>63</pd:y>
        <config>
            <element ref="pfx:accepts"/>
        </config>
        <pd:inputBindings>
            <pfx:accepts>
                <xsl:for-each select="$Split-Accepts/root/segments">
                    <pfx:accept>
                        <xsl:if test="params[1]">
                            <xsl:attribute name="type">
                                <xsl:value-of select="params[1]"/>
                            </xsl:attribute>
                        </xsl:if>
                        <xsl:attribute name="q">
                            <xsl:value-of select="substring-after(tib:if-absent(params[2][starts-with(., 'q=')], 'q=1.0'),'=')"/>
                        </xsl:attribute>
                        <xsl:for-each select="params[position() > 1 and not(starts-with(., 'q='))]">
                            <pfx:parameters>
                                <xsl:attribute name="name">
                                    <xsl:value-of select="substring-before(.,'=')"/>
                                </xsl:attribute>
                                <xsl:attribute name="value">
                                    <xsl:value-of select="substring-after(.,'=')"/>
                                </xsl:attribute>
                            </pfx:parameters>
                        </xsl:for-each>
                    </pfx:accept>
                </xsl:for-each>
            </pfx:accepts>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Split Accepts">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>367</pd:x>
        <pd:y>64</pd:y>
        <config>
            <element>
                <xsd:element name="root">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="segments" minOccurs="0" maxOccurs="unbounded">
                                <xsd:complexType>
                                    <xsd:sequence>
                                        <xsd:element name="params" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
                                    </xsd:sequence>
                                </xsd:complexType>
                            </xsd:element>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </element>
        </config>
        <pd:inputBindings>
            <root>
                <xsl:for-each select="tib:tokenize($Start/accept, &quot;,&quot;)">
                    <segments>
                        <xsl:for-each select="tib:tokenize(., &quot;;&quot;)">
                            <params>
                                <xsl:value-of select="."/>
                            </params>
                        </xsl:for-each>
                    </segments>
                </xsl:for-each>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Split Accepts</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse Accepts</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Split Accepts</pd:from>
        <pd:to>Parse Accepts</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>