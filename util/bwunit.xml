<?xml version="1.0" encoding="UTF-8"?>
<project default="help"
         name="bwunit"
         xmlns="antlib:org.apache.tools.ant"
         xmlns:tibant="org.windyroad.tibant"
         xmlns:bwunit="org.windyroad.bwunit"
         xmlns:bwubuild="org.windyroad.bwunit.build"
         basedir="..">

	<import file="ivy-util.xml" />

	<property name="bwunit.version" value="10" />
	<!-- we need to load the BWUnit Ant macros In order to use them. We have made to import optional because on the
	        first run, BWUnit will not have been downloaded and unzipped 
	        Ideally, we would use the bwunit version number as per the ivy.xml, but that is not know at the time the file
	        is imported. -->
	<import file="../lib/bwunit-${bwunit.version}/util/bwunit.xml" optional="true" />

	<!-- to allow developers to change the BWUnit settings, we store theses values
	        in properties, which are used in the other targets -->
	<target name="-init-bwunit-properties">
		<property name="bwunit.home" value="lib/bwunit-${bwunit.version}" />
	</target>

	<!-- we don't want to unzip BWUnit every time, so we check to see if it's been unzipped -->
	<target name="-check-bwunit-unpacked"
	        description="Check if BWUnit has been unzipped"
	        depends="-init-bwunit-properties,ivy-util.retrieve-test">
		<condition property="bwunit-unpacked">
			<isfileselected file="${bwunit.home}">
				<type type="dir" />
			</isfileselected>
		</condition>
	</target>

	<!-- In order to use BWUnit we must unzip it -->
	<target name="-unpack-bwunit" description="Unzip BWUnit" depends="-check-bwunit-unpacked" unless="bwunit-unpacked">
		<unzip dest="${bwunit.home}" src="${dep.bwunit.BWUnit.zip}" overwrite="true" />
		<property name="bwunit.license.file" location="${dep.bwunit.BWUnit.license}" />
	</target>

	<!-- In order to have BWUnit unpacked when with retrieve the test dependencies, we overrite the `retrieve-test`
	 target so that ir retrives the deps and unpacks BWUnit -->
	<target name="retrieve-test" description="retrieve test dependancies with ivy" depends="-unpack-bwunit" />

	<!-- In order to have BWUnit unpacked when with retrieve the default dependencies, we overrite the `retrieve-test`
	     target so that ir retrives the deps and unpacks BWUnit -->
	<target name="retrieve" description="retrieve dependancies with ivy" depends="-unpack-bwunit" />

	<target name="help">
		<exec executable="${ant.home}/bin/ant">
			<arg value="-projecthelp" />
			<arg value="-buildfile" />
			<arg value="${ant.file}" />
		</exec>
	</target>

	<macrodef name="gen-doc"
	          uri="org.windyroad.bwunit.build"
	          description="builds a html document from an Apache Ant file">
		<attribute name="in" description="The Ant file to create documentation for" />
		<attribute name="out" description="The file to write the documentation to" />
		<attribute name="version" description="The version number to include in the documentation" default="" />
		<attribute name="name"
		           description="The name of the type of document being produced. e.g., `Build Guide`"
		           default="User Guide" />
		<attribute name="force"
		           description="Force creation of the output document, even if the input hasn't changed"
		           default="false" />
		<attribute name="validate" description="validate the generated document" default="true" />
		<attribute name="classpath" default="${saxon.jar.path}" description="the classpath to the saxon jar" />
		<attribute name="taskname" default="bwubuild:gendoc" />
		<sequential>
			<outofdate force="@{force}">
				<sourcefiles>
					<pathelement path="@{in}" />
					<pathelement path="${bwunit.home}/util/xslt/userguide.xslt" />
				</sourcefiles>
				<targetfiles path="@{out}" />
				<sequential>
					<tibant:xslt in="@{in}" out="@{out}" style="${bwunit.home}/util/xslt/userguide.xslt">
						<arg value="version=@{version}" />
						<arg value="doc-name=@{name}" />
					</tibant:xslt>

				</sequential>
			</outofdate>
			<if>
				<istrue value="@{validate}" />
				<then>
					<echo level="info">Validating Result...</echo>
					<schemavalidate failonerror="true" warn="true">
						<fileset dir="." includesfile="@{out}">
						</fileset>
						<schema namespace="http://www.w3.org/XML/1998/namespace" file="test/antunit/data/xml.xsd" />
						<schema namespace="http://www.w3.org/1999/xhtml" file="test/antunit/data/xhtml-strict.xsd" />
						<schema namespace="http://www.w3.org/2001/XMLSchema" file="test/antunit/data/XMLSchema.xsd" />
						<dtd publicId="-//W3C//DTD XHTML 1.0 Strict//EN"
						     location="test/antunit/data/xhtml1-strict.dtd" />
						<dtd publicId="-//W3C//ENTITIES Latin 1 for XHTML//EN"
						     location="test/antunit/data/xhtml-lat1.ent" />
						<dtd publicId="-//W3C//ENTITIES Symbols for XHTML//EN"
						     location="test/antunit/data/xhtml-symbol.ent" />
						<dtd publicId="-//W3C//ENTITIES Special for XHTML//EN"
						     location="test/antunit/data/xhtml-special.ent" />
					</schemavalidate>
					<echo level="info">...Validated</echo>
				</then>
			</if>
		</sequential>
	</macrodef>

	<macrodef name="run-bwunit-tests"
	          uri="org.windyroad.bwunit.build"
	          description="runs the bwunit tests and by default fails the build on the first error">
		<attribute name="phase" />
		<attribute name="srcdir" default="src/main/bw" />
		<attribute name="aliases-refid" default="_empty-set_" />
		<attribute name="failonerror" default="true" />
		<sequential>
			<loadfile property="bwunit.license" srcfile="${dep.bwunit.BWUnit.license}" />
			<for param="testsuite">
				<dirset dir="@{srcdir}" includes="**/test/@{phase}TestSuite" id="@{phase}.dirs" />
				<sequential>
					<dirname property="@{testsuite}.project.path" file="@{testsuite}/.." />
					<basename property="@{testsuite}.project.name" file="${@{testsuite}.project.path}" />
					<mkdir dir="build/@{phase}/${@{testsuite}.project.name}" />
					<echo message=">>> Found Test Suite - @{testsuite} , ${@{testsuite}.project.path} , ${@{testsuite}.project.name}" />
		            <echo>Aliases(@{aliases-refid}):
${ant.refid:@{aliases-refid}}</echo>
					<bwunit:run-tests dir="${@{testsuite}.project.path}/.."
					                  project="${@{testsuite}.project.name}"
					                  result-dest-dir="build/@{phase}/${@{testsuite}.project.name}"
					                  force="${bwunit.force}"
					                  failonerror="@{failonerror}"
					                  license="${bwunit.license}"
					                  create-dtl-file="true"
					                  custom-cp-ext-prepend="%EXISTING-VALUE%${path.separator}${dep.h2.h2.jar}"
					                  aliases-refid="@{aliases-refid}"
					                  scope="test/@{phase}TestSuite/" />
				</sequential>
			</for>
		</sequential>
	</macrodef>

	<macrodef name="report-bwunit-tests"
	          uri="org.windyroad.bwunit.build"
	          description="runs the bwunit tests and reports on all tests passed and failed.">
		<attribute name="phase" />
		<attribute name="srcdir" default="src/main/bw" />
		<attribute name="aliases-refid" default="_empty-set_" />
		<sequential>
			<bwubuild:run-bwunit-tests phase="@{phase}"
			                           srcdir="@{srcdir}"
			                           aliases-refid="@{aliases-refid}"
			                           failonerror="false" />
			<for param="testsuite">
				<dirset refid="@{phase}.dirs" />
				<sequential>
					<bwunit:convert-to-junit-results file="build/@{phase}/${@{testsuite}.project.name}/results.xml"
					                                 tofile="build/@{phase}/${@{testsuite}.project.name}.xml" />
				</sequential>
			</for>
		</sequential>
	</macrodef>

	<target name="-load-ant-contrib" depends="retrieve" unless="ant-contrib.loaded">
		<tibant:load-ant-contrib />
		<property name="ant-contrib.loaded" value="true" />
	</target>

	<target name="build" />


	<target name="run-quick-tests" description="Run Quick tests" depends="-load-ant-contrib,build,retrieve-test">
		<bwubuild:run-bwunit-tests phase="quick" />
		<echo message=">>> Invoked bwunit tests" />
		<subant target="run-quick-tests">
			<fileset dir="examples" includes="*/build.xml" />
		</subant>
		<echo message=">>> Invoked sub project tests" />
	</target>

	<target name="report-quick-tests"
	        description="Run Quick tests and create a JUnit compatible report"
	        depends="-load-ant-contrib,build,retrieve-test">
		<bwubuild:report-bwunit-tests phase="quick" />
		<!--subant target="report-quick-tests">
	            <fileset dir="examples" includes="*/build.xml" />
	        </subant-->
	</target>

	<target name="run-uat-tests" description="Run UATs" depends="-load-ant-contrib,build,retrieve-test">
		<bwubuild:run-bwunit-tests phase="uat" />
		<subant target="run-uat-tests">
			<fileset dir="examples" includes="*/build.xml" />
		</subant>
	</target>

	<target name="report-uat-tests"
	        description="Run UATs and create a JUnit compatible report"
	        depends="-load-ant-contrib,build,retrieve-test">
		<bwubuild:report-bwunit-tests phase="uat" />
		<subant target="report-uat-tests">
			<fileset dir="examples" includes="*/build.xml" />
		</subant>
	</target>
</project>
