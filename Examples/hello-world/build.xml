<?xml version="1.0" encoding="UTF-8"?>
<project name="hello-world"
         xmlns="antlib:org.apache.tools.ant"
         xmlns:bwubuild="org.windyroad.bwunit.build"
         xmlns:bwunit="org.windyroad.bwunit"
         xmlns:tibant="org.windyroad.tibant"
         xmlns:ivy="antlib:org.apache.ivy.ant">

	<echo>LOADING: ${user.home}/${ant.project.name}.properties</echo>
	<property file="${user.home}/${ant.project.name}.properties" />
	<echo>LOADING: ${user.home}/build.properties</echo>
	<property file="${user.home}/build.properties" />
	<property name="config.filename" value="${user.name}.properties" />
	<echo>LOADING: config/${config.filename}</echo>
	<property file="config/${config.filename}" />
	<echo>LOADING: config/default.properties</echo>
	<property file="config/default.properties" />

	<defaultexcludes echo="false" add="**/*.hg" />
	<defaultexcludes echo="false" add="**/*.hg/**" />

	<property name="ivy.install.version" value="2.2.0" />
	<property name="ivy.jar.dir" location="${user.home}/.ivy2/jars" />
	<property name="ivy.jar.file" location="${ivy.jar.dir}/ivy-${ivy.install.version}.jar" />
	<property name="ivy.retrieve.pattern" location="../../lib/[artifact]-[revision](-[classifier]).[ext]" />


	<property name="bwunit.home" location="../../lib/bwunit" />
	<import file="${bwunit.home}/util/bwunit.xml" optional="true" />

	<property name="rest4BW.projlib" location="../../build/rest4BW.projlib" />
	<fail message="Please build rest4BW or correct the path to rest4BW.projlib, before you try to run the examples">
		<condition>
			<available file="${rest4BW.projlib}">
			</available>
		</condition>
	</fail>

	<propertyset id="hello-world.aliases">
		<propertyref name="rest4BW.projlib" />
	</propertyset>

	<target name="-load-ant-contrib" depends="retrieve" unless="ant-contrib.loaded">
		<tibant:load-ant-contrib />
		<property name="ant-contrib.loaded" value="true" />
	</target>

	<target name="init">
		<mkdir dir="build" />
	</target>

	<target name="designer" depends="-load-ant-contrib" description="Launch rest4BW in TIBCO Designer">
		<bwunit:designer dir="src/main/bw"
		                 project="hello-world"
		                 aliases-refid="hello-world.aliases"
		                 create-dtl-file="true" />
	</target>

	<target name="clean" description="">
		<delete dir="build" verbose="true" />
		<delete verbose="true">
			<fileset dir="src/main/bw" includes="**/.designtimelibs" />
		</delete>
	</target>

	<target name="-download-ivy" unless="ivy.downloaded">
		<mkdir dir="${ivy.jar.dir}" />
		<!-- download Ivy from web site so that it can be used even without any special installation -->
		<echo message="installing ivy..." />
		<get src="http://repo1.maven.org/maven2/org/apache/ivy/ivy/${ivy.install.version}/ivy-${ivy.install.version}.jar"
		     dest="${ivy.jar.file}"
		     usetimestamp="true"
		     verbose="true" />
	</target>

	<target name="-check-ivy-downloaded">
		<condition property="ivy.downloaded">
			<available file="${ivy.jar.file}" />
		</condition>
	</target>

	<target name="-load-ivy" depends="-check-ivy-downloaded,-download-ivy" unless="ivy.loaded">
		<path id="ivy.lib.path">
			<fileset dir="${ivy.jar.dir}" includes="*.jar" />
		</path>
		<taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path" />
		<property name="ivy.report.todir" location="build/ivy" />
		<ivy:configure file="config/ivysettings.xml" />
		<ivy:resolve file="${ivy.dep.file}" conf="${ivy.configurations}" />
		<property name="ivy.loaded" value="true" />
	</target>

	<target name="-check-bwunit-uptodate" description="retrieve dependancies with ivy" depends="-ivy-retrieve">
		<condition property="bwunit-outofdate">
			<or>
				<not>
					<isfileselected file="${bwunit.home}">
						<type type="dir" />
					</isfileselected>
				</not>
				<uptodate property="bwunit-uptodate">
					<srcfiles dir="${bwunit.home}" includes="**" />
					<mapper type="merge" to="${bwunit.BWUnit}" />
				</uptodate>
			</or>
		</condition>
	</target>

	<target name="-unpack-bwunit"
	        description="retrieve dependancies with ivy"
	        depends="-check-bwunit-uptodate"
	        if="bwunit-outofdate">
		<unzip dest="${bwunit.home}" src="${bwunit.BWUnit}" overwrite="true" />
	</target>

	<target name="-ivy-retrieve" description="retrieve dependancies with ivy" depends="-load-ivy">
		<ivy:retrieve />
		<ivy:artifactproperty name="[module].[artifact]" value="${ivy.retrieve.pattern}" />
	</target>

	<target name="retrieve" description="retrieve dependancies" depends="-ivy-retrieve,-unpack-bwunit" />


	<macrodef name="run-bwunit-tests"
	          uri="org.windyroad.bwunit.build"
	          description="runs the bwunit tests and by default fails the build on the first error">
		<attribute name="phase" />
		<attribute name="failonerror" default="true" />
		<sequential>
			<loadfile property="bwunit.license" srcfile="${bwunit.license.file}" />
			<for param="testsuite">
				<dirset dir="src/main/bw/hello-world" includes="**/test/@{phase}TestSuite" id="@{phase}.dirs" />
				<sequential>
					<mkdir dir="build/@{phase}" />
					<echo message=">>> Found Test Suite - @{testsuite} " />
					<bwunit:run-tests dir="src/main/bw"
					                  project="hello-world"
					                  aliases-refid="hello-world.aliases"
					                  result-dest-dir="build/@{phase}"
					                  force="${bwunit.force}"
					                  failonerror="@{failonerror}"
					                  license="${bwunit.license}"
					                  create-dtl-file="true"
					                  scope="test/@{phase}TestSuite/" />
				</sequential>
			</for>
		</sequential>
	</macrodef>

	<macrodef name="report-bwunit-tests"
	          uri="org.windyroad.bwunit.build"
	          description="runs the bwunit tests and reports on all tests passed and failed.">
		<attribute name="phase" />
		<sequential>
			<bwubuild:run-bwunit-tests phase="@{phase}" failonerror="false" />
			<for param="testsuite">
				<dirset refid="@{phase}.dirs" />
				<sequential>
					<bwunit:convert-to-junit-results file="build/@{phase}/results.xml"
					                                 tofile="build/@{phase}/${ant.project.name}.xml" />
				</sequential>
			</for>
		</sequential>
	</macrodef>

	<target name="run-tests" description="Run Quick tests" depends="-load-ant-contrib">
        <bwunit:run-tests dir="src/main/bw"
                          project="hello-world"
                          aliases-refid="hello-world.aliases"
                          result-dest-dir="build/test"
                          failonerror="true"
                          license="${bwunit.license}"
                          create-dtl-file="true" />
	</target>

	<target name="report-quick-tests"
	        description="Run Quick tests and create a JUnit compatible report"
	        depends="-load-ant-contrib">
        <bwunit:run-tests dir="src/main/bw"
                          project="hello-world"
                          aliases-refid="hello-world.aliases"
                          result-dest-dir="build/test"
                          failonerror="false"
                          license="${bwunit.license}"
                          create-dtl-file="true" />
        <bwunit:convert-to-junit-results file="build/test/results.xml"
                                         tofile="build/test/hello-world-junit.xml" />
	</target>

</project>
